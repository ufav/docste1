version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Проброс порта 80 на хосте на порт 80 в контейнере
    depends_on:
      - backend  # Убедитесь, что сервис backend запущен перед frontend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # Проброс порта 8000 на хосте на порт 8000 в контейнере
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db  # Убедитесь, что сервис db запущен перед backend
    env_file:
      - .env  # Загрузка переменных окружения из файла .env

  db:
    image: postgres:13  # Использование образа PostgreSQL 13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"  # Проброс порта 5432 на хосте на порт 5432 в контейнере
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Сохранение данных в именованном томе
    env_file:
      - .env  # Загрузка переменных окружения из файла .env

  nginx:
    image: nginx:latest  # Использование последнего образа Nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Проброс кастомного конфигурационного файла Nginx
    ports:
      - "8080:80"  # Проброс порта 8080 на хосте на порт 80 в контейнере

volumes:
  postgres_data:  # Определение именованного тома для данных PostgreSQL
